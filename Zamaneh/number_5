-- Begin Date	Greater Than Or Equal To	2021
-- End Date	Less Than Or Equal To	2026

SELECT 
	wrE3."Person Code" AS c0,
	wrE19."Time Period Begin Date" AS c1,
	wrE19."Time Period End Date" AS c2,
	wrE19."Total TS Hours" AS c3,
	wrE20."Status Change Timestamp" AS c4,
	wrE3."Last Name" AS c5,
	wrE3."First Name" AS c6,
	wrE19."Total Business Hours" AS c7,
	wrE19."TS Current Status" AS c8,
	wrE19."Controller  Last Name" AS c9,
	wrE19."Controller  First Name" AS c10,
	wrE19."TS key" AS c11,
	wrE3."Person Key" AS c12,
	wrE20."Approval History key" AS c13,
	wrE19."TS User Last Name" AS c14,
	wrE19."TS Username" AS c15,
	wrE19."Person key" AS c16,
	wrE20."TS key" AS c17
FROM (select p.person_key                                as "Person Key", p.project_key                               as "Project Key", p.customer_key                              as "Person Org Key", p.expense_vendor_key                        as "Vend Org Code Key Exp", p.time_vendor_key                           as "Vend Org Code Key Time", p.active                                    as "Person Active", p.timesheet_lines                           as "Timesheet Lines", bw.name                                     as "Business Week Name", p.person_code                               as "Person Code", labcat.labor_category                       as "Labor Cat", pc.pay_code                                 as "Pay Code", pm.payment_method_code                      as "Payment Method", proj.project_code                           as "Default Proj Code", proj.title                                  as "Default Proj Title", dporg.customer_code                         as "Default Proj Org Code", dporg.customer_name                         as "Default Proj Org Name", task.task_name                              as "Task Name", p.email                                     as "Email", etyp.employee_type_code                     as "Employee Type Code", round(p.expense_approval_amount , ccc.decimals) as "Expense Approval Amt", eagsc.chain_name                            as "Person Exp AppGrp", eagsc.description                           as "Person Exp AppGrp Desc", eragsc.chain_name                           as "Person Exp Req AppGrp ", eragsc.description                          as "Person Exp Req AppGrp Desc", p.first_name                                as "First Name", p.hide_vat                                  as "Hide VAT", p.hire_date                                 as "Hire Date", p.hour_increment                            as "Hour Increment", p.emp_id                                    as "Emp ID - Person ID Code 1", p.ssn                                       as "SSN - Person ID Code 2", p.tbd_user                                  as "TBD User", p.last_name                                 as "Last Name", lagsc.chain_name                            as "Person Lv Req AppGrp", lagsc.description                           as "Person Lv Req AppGrp Desc", locn.location_name                          as "Location Name", p.middle_initial                            as "Middle Initial", cust.customer_code                          as "Person Org Code", cust.customer_name                          as "Person Org Name", round(p.purchase_approval_amount, ccc.decimals) as "Purchase Approv Amt", p.assignment_email                          as "Assignment Email", p.expense_email                             as "Expense Email", p.leave_request_email                       as "Leave Request Email", p.purchase_email                            as "Purchase Email", p.timesheet_email                           as "Timesheet Email", p.suffix                                    as "Suffix", tps.period_name                             as "Timesheet Period Name", tagsc.chain_name                            as "Person Time AppGrp", tagsc.description                           as "Person Time AppGrp Desc", p.tito_required                             as "TITO Required", even.customer_code                          as "Person Vend Org Code Exp", tven.customer_code                          as "Person Vend Org Code Time", even.customer_name                          as "Person Vend Org Name Exp", tven.customer_name                          as "Person Vend Org Name Time", p.user01									as "USER01", p.user02									as "USER02", p.user03									as "USER03", p.user04									as "USER04", p.user05									as "USER05", p.user06									as "USER06", p.user07									as "USER07", p.user08									as "USER08", p.user09									as "USER09", p.user10									as "USER10", p.user11									as "USER11", p.user12									as "USER12", p.user13									as "USER13", p.user14									as "USER14", p.user15									as "USER15", p.user16									as "USER16", p.user17									as "USER17", p.user18									as "USER18", p.user19									as "USER19", p.user20									as "USER20", p.username                                  as "Username", p.po_form_title                             as "PO Form Title", p.last_login_timestamp                      as "Last Login", ccc.iso_currency_code                       as "Cost Rate Currency", prcc.iso_currency_code                      as "Preferred Currency", pacc.iso_currency_code                      as "Payment Currency" from person p join                    customer            cust    on cust.customer_key = p.customer_key left outer join         time_period_setup   tps     on tps.time_period_key = p.time_period_key left outer join         pay_code            pc      on pc.pay_code_key = p.pay_code_key left outer join         project             proj    on proj.project_key = p.project_key left outer join         customer            dporg   on dporg.customer_key = proj.customer_key left outer join         task                task    on task.task_key = p.task_key left outer join         labor_category      labcat  on labcat.labor_category_key = p.labor_category_key left outer join         payment_method      pm      on pm.payment_method_key = p.payment_method_key left outer join         business_week       bw      on bw.business_week_key = p.business_week_key left outer join         location            locn    on locn.location_key = p.location_key left outer join         employee_type       etyp    on etyp.employee_type_key = p.employee_type_key left outer join         customer            tven    on tven.customer_key = p.time_vendor_key left outer join         customer            even    on even.customer_key = p.expense_vendor_key left outer join         approval_group_submitter    lags    on  lags.person_key = p.person_key and lags.approval_type = 1 left outer join         chain                       lagsc   on  lagsc.chain_key = lags.chain_key left outer join         approval_group_submitter    tags    on  tags.person_key = p.person_key and tags.approval_type = 2 left outer join         chain                       tagsc   on  tagsc.chain_key = tags.chain_key left outer join         approval_group_submitter    erags   on  erags.person_key = p.person_key and erags.approval_type = 3 left outer join         chain                       eragsc  on  eragsc.chain_key = erags.chain_key left outer join         approval_group_submitter    eags    on  eags.person_key = p.person_key and eags.approval_type = 4 left outer join         chain                       eagsc   on  eagsc.chain_key = eags.chain_key join currency_code ccc ON ccc.currency_code_key = p.currency_code_key left outer join currency_code prcc ON prcc.currency_code_key = p.currency_key left outer join currency_code pacc ON pacc.currency_code_key = p.payment_currency_key where (exists (select 'x' from member where person_key = '3896' and role_key in (1,21)))  or ( exists ( select 'x' from approval_chain c join approval_group_submitter s on s.chain_key = c.chain_key where p.person_key = s.person_key and c.person_key = '3896' and s.approval_type in (1,2)) or exists ( select 'x' from approval_chain c join alternate a on a.person_key = c.person_key join approval_group_submitter s on s.chain_key = c.chain_key where a.alternate_key = '3896' and p.person_key = s.person_key and a.role_key = 2 and s.approval_type in (1,2)) or exists ( select 'x' from org_access_person oap where oap.global_access = 'Y' and oap.person_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or p.customer_key in ( select h.customer_key from org_access_hierarchy h join org_access_person oap on oap.org_access_person_key = h.org_access_person_key where oap.person_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or exists ( select 'x' from org_access_person oap join alternate a on a.person_key = oap.person_key and a.role_key = oap.role_key where oap.global_access = 'Y' and a.alternate_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or p.customer_key in ( select h.customer_key from org_access_hierarchy h join org_access_person oap on oap.org_access_person_key = h.org_access_person_key join alternate a on a.person_key = oap.person_key and a.role_key = oap.role_key where a.alternate_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) ) 
) wrE3
RIGHT OUTER JOIN (select t.person_time_key       as "TS key", t.person_key			as "Person key", t.username 				as "TS Username", t.first_name 			as "TS User First Name", t.last_name 			as "TS User Last Name", t.middle_initial 		as "TS User Middle Initial", t.period_name 			as "TS Period Name", case t.tps_code when 'S' then 'Semi-Monthly' when 'B' then 'Bi-Weekly' when 'W' then 'Weekly' when 'O' then '9/80 Weekly' when 'Y' then '9/80 Bi-Weekly' else '' end                     as "TS Period Type", t.total_hours 			as "Total TS Hours", t.hours_in_period 		as "Total Business Hours", t.begin_date 			as "Time Period Begin Date", t.end_date 				as "Time Period End Date", t.status 				as "TS Current Status", t.date_completed 		as "Current Status Change ts", t.control_first_name    as "Controller  First Name"	, t.control_last_name     as "Controller  Last Name"	, t.control_username      as "Controller  Username"	, t.control_middle_initial as "Controller  Middle Initial",  lmp.first_name          as "Last Updated By First Name"	, lmp.last_name           as "Last Updated By Last Name"	, lmp.middle_initial      as "Last Updated By Middle Initial", lmp.username            as "Last Updated By Username", case t.status when '' then null else t.last_update end  as "Last Updated Date", case when pr.exempt_status = 'E' then    'Salaried' when pr.exempt_status = 'N' then    'Hourly' when pr.exempt_status = 'X' then    'Non-Employee' when pr.exempt_status = 'S' then    'Non-Employee (PO)' else        null end                      as "TS User Classification", t.last_work_date 		 as "Work Date" from ( select p.person_key, p.first_name, p.middle_initial, p.last_name, p.suffix, p.username, p.email, p.business_week_key, p.customer_key, pr.exempt_status, pt.person_time_key, pt.status, pt.adjustment_status, pt.control_key, pt.date_completed, pt.dilution_hours, pt.historical, tps.period_name, tps.code as tps_code, ptd.total_hours, tps.hours_in_period, tp.begin_date, tp.end_date, cp.first_name as control_first_name, cp.middle_initial as control_middle_initial, cp.last_name as control_last_name, cp.username as control_username, ptd.last_update, ptd.last_time_data_key, ptd.last_work_date  from person_time pt  join 			person 				p	on p.person_key = pt.person_key join 			time_period			tp	on tp.time_period_key = pt.time_period_key and tp.begin_date = pt.begin_date join 			person_rate			pr	on pr.person_key = p.person_key and tp.end_date between pr.begin_date and pr.end_date join 			time_period_setup	tps	on tp.time_period_key = tps.time_period_key left outer join	person 				cp	on cp.person_key = pt.control_key left outer join (select max(last_update) as last_update, max(time_data_key) as last_time_data_key, max(work_date) as last_work_date, sum(case when adjusted_head = 'Y' then    quantity else    0 end) as total_hours, person_time_key from person_time_data group by person_time_key)            ptd on ptd.person_time_key = pt.person_time_key   union all   select p.person_key, p.first_name, p.middle_initial, p.last_name, p.suffix, p.username, p.email, p.business_week_key, p.customer_key, pr.exempt_status, null as person_time_key, 'MISSING' as status, null as adjustment_status, null as control_key, null as date_completed, null as dilution_hours, null as historical, tps.period_name, tps.code as tps_code, 0 as total_hours, tps.hours_in_period, tp.begin_date, tp.end_date, null as control_first_name, null as control_middle_initial, null as control_last_name, null as control_username, null as last_update, null as last_time_data_key, null as last_work_date  from time_period tp join 			person_rate			pr 	on tp.end_date between pr.begin_date and pr.end_date join 			person 				p 	on pr.person_key = p.person_key and p.active = 'Y' join 			member 				m 	on m.person_key = p.person_key and m.role_key = 4 join 			time_period_setup	tps	on tp.time_period_key = tps.time_period_key and tps.time_period_key = p.time_period_key left outer join person_time 		pt 	on pt.person_key = p.person_key and pt.time_period_key = tp.time_period_key and pt.begin_date = tp.begin_date where pt.person_time_key is null ) t left outer join person_time_data ptd 	on t.last_time_data_key = ptd.time_data_key left outer join person lmp 				on lmp.person_key = ptd.MODIFIED_PERSON_KEY left outer join customer perorg  		on perorg.customer_key = t.customer_key left outer join person_rate pr          on pr.person_key = t.person_key and t.begin_date >= pr.begin_date and t.begin_date <= pr.end_date where (exists (select 'x' from member where person_key = '3896' and role_key  = 4) and t.person_key = '3896' )  or (exists (select 'x' from member where person_key = '3896' and role_key in (1,21)))  or ( exists ( select 'x' from approval_chain c join approval_group_submitter s on s.chain_key = c.chain_key where t.person_key = s.person_key and c.person_key = '3896' and s.approval_type in (1,2)) or exists ( select 'x' from approval_chain c join alternate a on a.person_key = c.person_key join approval_group_submitter s on s.chain_key = c.chain_key where a.alternate_key = '3896' and t.person_key = s.person_key and a.role_key = 2 and s.approval_type in (1,2)) or exists ( select 'x' from org_access_person oap where oap.global_access = 'Y' and oap.person_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or perorg.customer_key in ( select h.customer_key from org_access_hierarchy h join org_access_person oap on oap.org_access_person_key = h.org_access_person_key where oap.person_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or exists ( select 'x' from org_access_person oap join alternate a on a.person_key = oap.person_key and a.role_key = oap.role_key where oap.global_access = 'Y' and a.alternate_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or perorg.customer_key in ( select h.customer_key from org_access_hierarchy h join org_access_person oap on oap.org_access_person_key = h.org_access_person_key join alternate a on a.person_key = oap.person_key and a.role_key = oap.role_key where a.alternate_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) )
) wrE19 ON (
	wrE3."Person Key" = wrE19."Person key"
)
LEFT OUTER JOIN (select t.person_time_key       as "TS key", t.person_key			as "Person key", t.approval_history_key	as "Approval History key", t.username 				as "TS Username", t.first_name 			as "TS User First Name", t.last_name 			as "TS User Last Name", t.middle_initial 		as "TS User Middle Initial", t.period_name 			as "TS Period Name", t.begin_date 			as "Time Period Begin Date", t.end_date 				as "Time Period End Date", t.status 				as "TS Status History",  t.pah_first_name		as "Status Changed By (First Name)", t.pah_last_name 		as "Status Changed By (Last Name)", t.pah_middle_initial 	as "Status Changed By (Middle Initial)", t.role_name 			as "Status Changed By (Person Role)", t.pah_username 			as "Status Changed By (Username)",  t.alternate_for_first_name 	as "Status Changed For (First Name)", t.alternate_for_username 	as "Status Changed For (Username)", t.alternate_for_last_name 	as "Status Changed For (Last Name)", t.alternate_for_initial 	as "Status Changed For (Middle Initial)",  t.approve_action_date 	as "Status Change Timestamp", t.approve_comments 		as "Comments",  t.first_status_change 	as "First Status Change", t.last_status_change 	as "Last Status Change" , t.pending_review 		as "Pending Review", to_date(to_char(t.review_date , 'YYYYMMDD'), 'YYYYMMDD')			as "Review Date", t.review_comments 		as "Review Comments"  from ( select p.person_key, p.first_name, p.middle_initial, p.last_name, p.suffix, p.username, p.email, p.business_week_key, p.customer_key, pr.exempt_status, pt.person_time_key, ah.status, pt.adjustment_status, pt.control_key, pt.date_completed, pt.dilution_hours, pt.historical, afp.first_name as alternate_for_first_name, afp.middle_initial as alternate_for_initial, afp.last_name as alternate_for_last_name, afp.username as alternate_for_username, tps.period_name,  ah.action_date 			as approve_action_date, ah.comments 			as approve_comments,  pah.first_name			as pah_first_name, pah.last_name 			as pah_last_name, pah.middle_initial 		as pah_middle_initial , pah.username 			as pah_username, r.role_name,  tp.begin_date, tp.end_date,  case (select min(ah_1.approval_history_key) from approval_history ah_1 where ah_1.person_time_key = ah.person_time_key and ah_1.status = ah.status) when ah.approval_history_key then 'Y' else 'N' end as first_status_change,  case (select max(ah_1.approval_history_key) from approval_history ah_1 where ah_1.person_time_key = ah.person_time_key and ah_1.status = ah.status) when ah.approval_history_key then 'Y' else 'N' end as last_status_change, ah.approval_history_key, case when (ah.review_required ='Y' and ah.review_date is null)  then 'Pending Review' when (ah.review_required ='Y' and ah.review_date is not null) then 'Reviewed' else null END as pending_review, ah.review_date, ah.review_comments  from person_time pt  join 			person 				p	on p.person_key = pt.person_key join 			time_period 		tp	on tp.time_period_key = pt.time_period_key and tp.begin_date = pt.begin_date join 			person_rate 		pr	on pr.person_key = p.person_key and tp.end_date between pr.begin_date and pr.end_date join 			time_period_setup	tps	on tp.time_period_key = tps.time_period_key left outer join	approval_history 	ah	on ah.person_time_key = pt.person_time_key left outer join	person 				pah	on pah.person_key = ah.person_key left outer join	person 				afp	on afp.person_key = ah.alternate_for_key left outer join	role 				r	on r.role_key = ah.role_key union all   select p.person_key, p.first_name, p.middle_initial, p.last_name, p.suffix, p.username, p.email, p.business_week_key, p.customer_key, pr.exempt_status, null as person_time_key, 'MISSING' as status, null as adjustment_status, null as control_key, null as date_completed, null as dilution_hours, null as historical, null as alternate_for_first_name, null as alternate_for_initial, null as alternate_for_last_name, null as alternate_for_username, tps.period_name, null as approve_action_date, null as approve_comments, null as pah_first_name, null as pah_last_name, null as pah_middle_initial , null as pah_username, null as role_name, tp.begin_date, tp.end_date, 'Y' as first_status_change, 'Y' as last_status_change, null as approval_history_key, null as pending_review, null as review_date, null as review_comments  from time_period tp  join person_rate 		pr 	on	tp.end_date between pr.begin_date and pr.end_date join person 			p 	on	pr.person_key = p.person_key and p.active = 'Y' join member 			m 	on	m.person_key = p.person_key and m.role_key = 4 join time_period_setup	tps	on	tp.time_period_key = tps.time_period_key and tps.time_period_key = p.time_period_key left outer join person_time pt on pt.person_key = p.person_key and pt.time_period_key = tp.time_period_key and pt.begin_date = tp.begin_date  where pt.person_time_key is null ) t left outer join customer perorg  		on perorg.customer_key = t.customer_key where (exists (select 'x' from member where person_key = '3896' and role_key in (1,21)))  or ( exists ( select 'x' from approval_chain c join approval_group_submitter s on s.chain_key = c.chain_key where t.person_key = s.person_key and c.person_key = '3896' and s.approval_type in (1,2)) or exists ( select 'x' from approval_chain c join alternate a on a.person_key = c.person_key join approval_group_submitter s on s.chain_key = c.chain_key where a.alternate_key = '3896' and t.person_key = s.person_key and a.role_key = 2 and s.approval_type in (1,2)) or exists ( select 'x' from org_access_person oap where oap.global_access = 'Y' and oap.person_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or perorg.customer_key in ( select h.customer_key from org_access_hierarchy h join org_access_person oap on oap.org_access_person_key = h.org_access_person_key where oap.person_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or exists ( select 'x' from org_access_person oap join alternate a on a.person_key = oap.person_key and a.role_key = oap.role_key where oap.global_access = 'Y' and a.alternate_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) or perorg.customer_key in ( select h.customer_key from org_access_hierarchy h join org_access_person oap on oap.org_access_person_key = h.org_access_person_key join alternate a on a.person_key = oap.person_key and a.role_key = oap.role_key where a.alternate_key = '3896' and oap.access_type = 0 and oap.role_key in (2,7,11)) )
) wrE20 ON (
	wrE19."TS key" = wrE20."TS key"
)
WHERE 
	((wrE19."TS Current Status" NOT IN ('MISSING') OR wrE19."TS Current Status" IS NULL) AND (wrE19."Time Period Begin Date" >= '2021-06-01 00:00:00.000' AND wrE19."Time Period End Date" <= '2025-06-30 23:59:59.997'))
ORDER BY 
	CONCAT(wrE19."TS User Last Name", wrE19."TS Username") ASC, wrE19."Time Period End Date" ASC
